@page "/rrdrm"

@inject NavigationManager NavigationManager
@inject IDataAccess db
@inject MyAppState MyAppState
@*<h4><span class="badge badge-info"> Kort Durumu & Rezervasyon </span></h4>*@

<div class="card">
		<h5 class="card-header">Kort Durumu</h5>
		<div class="card-body">
				<DxFormLayout ItemSizeMode="SizeMode.Small">
						<DxFormLayoutItem Caption="Tarih" ColSpanMd="3">
								<Template>
										<DxDateEdit @bind-Date="@Trh"
																Format="dd.MM.yy"
																DisplayFormat="dddd dd.MM.yy"
																MinDate="@MinDate"
																MaxDate="@MaxDate"
																TimeSectionVisible="false"></DxDateEdit>
								</Template>
						</DxFormLayoutItem>

						<DxFormLayoutItem Caption="Süre" ColSpanMd="3">
								<Template>
										<DxComboBox @bind-Value="@Sure"
																Data="@(new int[] { 60, 90, 120 })" />
								</Template>
						</DxFormLayoutItem>

						<DxFormLayoutItem Caption="Kort" ColSpanMd="3">
								<Template>
										<DxComboBox @bind-Value="@KsID"
																NullText="Kort Seçin..."
																TextFieldName="Ad"
																ValueFieldName="KsID"
																Data="@dataKS" />
								</Template>
						</DxFormLayoutItem>

						<DxFormLayoutItem Caption="Period" ColSpanMd="3">
								<Template>
										<DxComboBox @bind-Value="@Period"
																Data="@(new int[] { 60, 30 })" />
								</Template>
						</DxFormLayoutItem>

						<DxFormLayoutItem ColSpanMd="6">
								<Template>
										<DxButton RenderStyle="ButtonRenderStyle.Warning" Click="@Read" Text="Kort Durumunu Göster">
										</DxButton>
								</Template>
						</DxFormLayoutItem>
				</DxFormLayout>
		</div>
</div>

<br />
@*<DxToolbarItem Text="@(Trh.ToString("dd.MM.yy dddd"))"*@

<DxDataGrid @ref="@grid"
						Data="@data"
						KeyFieldName="Trh"
						@bind-SingleSelectedDataRow="@SelectedRow"
						InnerComponentSizeMode="SizeMode.Small"
						PageSize="40"
						CssClass="MyGrid table-striped">
		<HeaderTemplate>
				<DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained">
						<DxToolbarItem Text='@($"{Trh:dddd dd.MM.yy}, Oyun Süresi: {Sure}dak")'
													 CssClass="font-italic"
													 Enabled="false" />
						<DxToolbarItem Text="@(MyAppState.getAaAd())"
													 BeginGroup="true"
													 Alignment="ToolbarItemAlignment.Right"
													 CssClass="font-italic"
													 Enabled="false" />
				</DxToolbar>
		</HeaderTemplate>
		<Columns>
				<DxDataGridColumn Field=@nameof(RRdrmModel._TrhT)
													TextAlignment="DataGridTextAlign.Center"
													SortOrder="DataGridColumnSortOrder.Ascending"
													SortIndex="1"
													Width="4em"
													EditorVisible="false"
													Caption="Zaman" />

				<DxDataGridSpinEditColumn Field=@nameof(RRdrmModel.NBK)
																	TextAlignment="DataGridTextAlign.Center"
																	Width="4em"
																	DisplayFormat="#"
																	EditorVisible="false"
																	Caption="BoşKort" />

				<DxDataGridColumn Field=@nameof(RRdrmModel.Info)
													EditorVisible="false"
													Caption="Info" />

		</Columns>

</DxDataGrid>

<br />

@if (usrRrOK)
{
<div class="card">
		<h5 class="card-header">Rezervasyon</h5>
		<div class="card-body">
				<DxFormLayout ItemSizeMode="SizeMode.Small">
						<DxFormLayoutItem Caption="Tarih" ColSpanMd="12">
								<Template>
										<DxTextBox Text="@iTrh?.ToString("dd MMMM dddd HH:mm")" ReadOnly="true" />
								</Template>
						</DxFormLayoutItem>

						<DxFormLayoutItem ColSpanMd="4" BeginRow="true">
								<Template>
										<DxButton RenderStyle="ButtonRenderStyle.Warning" Click="@RrTalep" Text="Rezervasyon Talep" Enabled="TalepEnabled" />
								</Template>
						</DxFormLayoutItem>

						<DxFormLayoutItem Caption="Talep Sonucu" ColSpanMd="12" BeginRow="true">
								<Template>
										<DxTextBox Text='@TalepMsj' ReadOnly="true" />
								</Template>
						</DxFormLayoutItem>
				</DxFormLayout>
		</div>
</div>
}


@code {
		private int AaID { get; set; }
		private int UuID { get; set; }

		List<RRdrmModel> data;

		DateTime? iTrh;
		bool TalepEnabled = false;
		string TalepMsj = "";
		int TalepRrID = 0;
		string usrSkl = "";
		bool usrRrOK = false;

		RRdrmModel selectedRow;
		RRdrmModel SelectedRow
		{
				get { return selectedRow; }
				set
				{
						selectedRow = value;
						iTrh = selectedRow.Trh;
						if (selectedRow.NBK > 0 && usrRrOK)
								TalepEnabled = true;
						else
								TalepEnabled = false;
						StateHasChanged();
				}
		}
		DxDataGrid<RRdrmModel> grid;
		List<KSmodel> dataKS;


		DateTime Trh { get; set; }
		DateTime MinDate { get; set; }
		DateTime MaxDate { get; set; }

		int KsID = 0;
		int Sure = 60;
		int Period = 60;

		async Task RrTalep()
		{
				dynamic p = new
				{
						AaID = AaID,
						UuID = UuID,
						Trh = SelectedRow.Trh,
						Sure = Sure,
						KsID = KsID,
				};

				string sql = $"select * from RR_TALEP(@AaID, @UuID,  @Trh, @Sure, @KsID)";
				RRtalepModel aaa = await db.LoadRec<RRtalepModel, dynamic>(sql, p);

				TalepRrID = aaa.RrID;
				if (TalepRrID == 0)
						TalepMsj = $"{aaa.Msj}";
				else
						TalepMsj = $"{aaa.Msj} RzrvNo: {aaa.RrID:N0}";

				await Read();
				StateHasChanged();
		}

		async Task Read()
		{
				dynamic p = new
				{
						AaID = AaID,
						KsID = KsID,
						Trh = Trh,
						Sure = Sure,
						Period = Period
				};

				string sql = $"select * from RR_BOS(@AaID, @KsID, @Trh, @Sure, @Period)";
				data = await db.LoadData<RRdrmModel, dynamic>(sql, p);
		}

		protected override async Task OnInitializedAsync()
		{
				AaID = MyAppState.getAaID();
				UuID = MyAppState.getUsrID();
				usrSkl = MyAppState.getUsrSkl();
				usrRrOK = MyAppState.getUsrRrOK();

				var aa = await db.LoadData<AAmodel, dynamic>($"select RzrMaxGun from AA where AaID = {AaID}", new { });
				int RzrMaxGun = aa[0].RzrMaxGun;

				//Trh = DateTime.Today;
				Trh = new DateTime(2020, 11, 11, 8, 0, 0);  // 11inde kayit var onu gormek icin, simdilik
				MinDate = Trh;
				MaxDate = MinDate.AddDays(RzrMaxGun);

				string sql = "";
				if (usrSkl == "U")
						sql = $"select * from KS where AaID = {AaID} and UyeRzrOK = 1";
				else
						sql = $"select * from KS where AaID = {AaID} and Aktif = 1";

				dataKS = await db.LoadData<KSmodel, dynamic>(sql, new { });
				KsID = dataKS[0].KsID;
		}

}
